{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pnguy\\\\OneDrive\\\\Desktop\\\\VSC\\\\movie_website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport MovieCard from './MovieCard';\nimport './App.css';\nimport SearchIcon from './search.svg';\n// 9eb546a5\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com/?apikey=9eb546a5';\nconst movie1 = {\n  \"Title\": \"Superman & Lois\",\n  \"Year\": \"2021–2024\",\n  \"imdbID\": \"tt11192306\",\n  \"Type\": \"series\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMWU5NmFlYjktMmM1NS00NGMwLWIzN2MtMWQ2YTg0ZWMyNmVjXkEyXkFqcGc@._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const searchMovie = async title => {\n    const APIresponse = await fetch(`${API_URL}&s=${title}`);\n    const data = await APIresponse.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovie('Superman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Land\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for movies\",\n          value: \"Superman\",\n          onChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SearchIcon,\n          alt: \"Search\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie1: movies[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" No Movies Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MovieCard","SearchIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","movie1","App","_s","movies","setMovies","searchMovie","title","APIresponse","fetch","data","json","Search","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","src","alt","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/pnguy/OneDrive/Desktop/VSC/movie_website/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport MovieCard from './MovieCard';\r\n\r\nimport './App.css';\r\nimport SearchIcon from './search.svg';\r\n// 9eb546a5\r\nconst API_URL = 'http://www.omdbapi.com/?apikey=9eb546a5';\r\n\r\nconst movie1 = {\r\n    \"Title\": \"Superman & Lois\",\r\n    \"Year\": \"2021–2024\",\r\n    \"imdbID\": \"tt11192306\",\r\n    \"Type\": \"series\",\r\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMWU5NmFlYjktMmM1NS00NGMwLWIzN2MtMWQ2YTg0ZWMyNmVjXkEyXkFqcGc@._V1_SX300.jpg\"\r\n}\r\n\r\nconst App = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const searchMovie = async (title) =>{\r\n        const APIresponse = await fetch(`${API_URL}&s=${title}`);\r\n        const data = await APIresponse.json();\r\n        setMovies(data.Search);\r\n    }\r\n    useEffect(() => {\r\n        searchMovie('Superman')\r\n    },[]);\r\n    return (\r\n        <>\r\n        <div className=\"app\">\r\n            <h1>Movie Land</h1>\r\n\r\n            <div className='search'>\r\n                <input \r\n                placeholder='Search for movies' \r\n                value = 'Superman' \r\n                onChange={()=>{}}\r\n                />\r\n\r\n                <img \r\n                src = {SearchIcon} \r\n                alt='Search'\r\n                onClick={()=>{}}\r\n                ></img>\r\n            </div>\r\n\r\n            {\r\n                movies?.length > 0 ? \r\n                (\r\n                    <div className='container'>\r\n                        <MovieCard movie1 = {movies[0]}/>\r\n                    </div>\r\n                ): \r\n                (\r\n                    <div className='empty'>\r\n                        <h2> No Movies Found</h2>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}